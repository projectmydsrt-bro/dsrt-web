name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write
  actions: write

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: |
          if jq -e '.scripts.lint' package.json >/dev/null 2>&1; then
            npm run lint
          else
            echo "No lint script defined; skipping lint"
          fi

      - name: Run tests (with coverage if configured)
        env:
          CI: true
        run: |
          if jq -e '.scripts.test' package.json >/dev/null 2>&1; then
            npm test -- --watchAll=false --coverage
          else
            echo "No test script defined; skipping tests"
          fi

      - name: Upload coverage to Codecov (optional)
        if: success() && (github.event_name == 'push' || github.event_name == 'pull_request')
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Build
        run: |
          if jq -e '.scripts.build' package.json >/dev/null 2>&1; then
            npm run build
          else
            echo "No build script defined; skipping build"
          fi

      - name: Dependency audit (npm)
        run: |
          echo "Checking vulnerabilities with npm audit"
          npm audit --audit-level=moderate || true
